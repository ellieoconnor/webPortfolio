/**
* Application Theme Styles
* This file should focus on theme-specific styles, including defining Angular Material themes or other UI library themes.
* It should use the variables defined in vars.scss
 */

// Import Angular Material theming
@use '@angular/material' as mat;
@import 'assets/sass/vars';

// Include the Angular Material theming styles with the custom theme
@include mat.core();
//@include mat.all-component-themes($defaultTheme-theme);
//@include mat.all-component-typographies($defaultTheme-theme);

$prussian-blue-palette: (
	50: #e7eaee,
	100: #c1cbd6,
	200: #9aaaba,
	300: #75899e,
	400: #576f8c,
	500: #39587b,
	600: #325073,
	700: #2a4768,
	800: #253d5b,
	900: #1f2d42,
	A100: lighten($primaryColor, 50%),
	A200: lighten($primaryColor, 30%),
	A400: lighten($primaryColor, 10%),
	A700: darken($primaryColor, 10%),
	contrast: (
		50: rgba(black, 0.87),
		100: rgba(black, 0.87),
		200: rgba(black, 0.87),
		300: rgba(black, 0.87),
		400: rgba(black, 0.87),
		500: white,
		600: white,
		700: white,
		800: white,
		900: white,
		A100: rgba(black, 0.87),
		A200: rgba(black, 0.87),
		A400: white,
		A700: white
	)
);

$light-blue-palette: (
	50: #ddf2fb,
	100: #bfdce3,
	200: #9fc2cc,
	300: #7ea8b4,
	400: #6495a2,
	500: #4a8290,
	600: #3e727f,
	700: #305e6a,
	800: #234b55,
	900: #12353e,
	A100: lighten($secondaryColor, 50%),
	A200: lighten($secondaryColor, 30%),
	A400: lighten($secondaryColor, 10%),
	A700: darken($secondaryColor, 10%),
	contrast: (
		50: rgba(black, 0.87),
		100: rgba(black, 0.87),
		200: rgba(black, 0.87),
		300: rgba(black, 0.87),
		400: rgba(black, 0.87),
		500: white,
		600: white,
		700: white,
		800: white,
		900: white,
		A100: rgba(black, 0.87),
		A200: rgba(black, 0.87),
		A400: white,
		A700: white
	)
);

$error-red-palette: (
	50: #fae6eb,
	100: #f5c0ce,
	200: #ef99ae,
	300: #e8738f,
	400: #e15c78,
	500: #dc4c64,
	600: #cb4760,
	700: #b5415b,
	800: #a03c56,
	900: #79344c,
	A100: lighten($errorColor, 50%),
	A200: lighten($errorColor, 30%),
	A400: lighten($errorColor, 10%),
	A700: darken($errorColor, 10%),
	contrast: (
		50: rgba(black, 0.87),
		100: rgba(black, 0.87),
		200: rgba(black, 0.87),
		300: rgba(black, 0.87),
		400: rgba(black, 0.87),
		500: white,
		600: white,
		700: white,
		800: white,
		900: white,
		A100: rgba(black, 0.87),
		A200: rgba(black, 0.87),
		A400: white,
		A700: white
	)
);

/***************************
Custom Themes
***************************/
$defaultTheme-primary: mat.define-palette($prussian-blue-palette, 800, 400, 900);
$defaultTheme-accent: mat.define-palette($light-blue-palette, 200, 50, 400);
// The warn palette is optional (defaults to red).
$defaultTheme-warn: mat.define-palette($error-red-palette, 500);

// Define typography configurations if needed
$defaultTheme-typography: mat.define-typography-config(
	$font-family: 'Roboto, "Helvetica Neue", sans-serif'
);

// Create the theme object, including color and typography configurations
$defaultTheme-theme: mat.define-light-theme(
	(
		color: (
			primary: $defaultTheme-primary,
			accent: $defaultTheme-accent,
			warn: $defaultTheme-warn
		),
		typography: $defaultTheme-typography
	)
);

@include mat.all-component-themes($defaultTheme-theme);
html,
body {
	height: 100%;
}

body {
	margin: 0;
	font-family: Roboto, 'Helvetica Neue', sans-serif;
}
